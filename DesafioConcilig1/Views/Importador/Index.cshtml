@model List<DesafioConcilig1.Models.Contratos>
@{
    ViewData["Title"] = "Importador de Arquivo";
}

<div class="container-fluid p-0 mb-3">
    <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom shadow-sm">
        <div class="container-fluid">
            <a class="navbar-brand fw-bold">
                Importador
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarContent" aria-controls="navbarContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                </ul>
                <ul class="navbar-nav d-flex align-items-center">
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <li class="nav-item me-3">
                            <span class="navbar-text">
                                Olá, <strong>@User.Identity.Name</strong>
                            </span>
                        </li>
                        <li class="nav-item">
                            <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-outline-danger btn-sm">
                                    <i class="bi bi-box-arrow-right"></i> Sair
                                </button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="btn btn-outline-primary btn-sm" href="@Url.Action("Login", "Account")">
                                <i class="bi bi-box-arrow-in-right"></i> Entrar
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
</div>

<div class="container my-4">
    <div class="card main-card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="card-title mb-0">Dashboard de Contratos</div>
            <div>
                <a asp-controller="Importador"
                   asp-action="RelatorioClientes"
                   class="btn btn-secondary me-2">
                    <i class="bi bi-people-fill"></i> Relatório de Clientes
                </a>

                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalImportar">
                    <i class="bi bi-upload"></i> Importar Excel/CSV
                </button>
            </div>
        </div>

        <div class="card-body p-3">
            <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                <table class="table table-hover table-bordered mb-0">
                    <thead class="table-dark position-sticky top-0">
                        <tr>
                            <th>Nome</th>
                            <th>CPF</th>
                            <th>Contrato</th>
                            <th>Produto</th>
                            <th>Vencimento</th>
                            <th>Valor</th>
                            <th>Importado Por</th>
                        </tr>
                    </thead>
                    <tbody id="tbodyContratos">
                        @Html.Partial("~/Views/Importador/_TabelaContratos.cshtml", Model)
                    </tbody>
                </table>
            </div>

            <div id="mensagemGeral"
                 class="alert mt-3"
                 role="alert"
                 style="display:none; max-width: 100%; border-radius: 4px;">
            </div>
        </div>
    </div>
</div>

<div class="modal fade"
     id="modalImportar"
     data-bs-backdrop="static"
     data-bs-keyboard="false"
     tabindex="-1"
     aria-labelledby="modalImportarLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="formImport" method="post" enctype="multipart/form-data">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="modalImportarLabel">
                        <i class="bi bi-file-earmark-arrow-up-fill"></i> Importar Arquivo
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label for="arquivo" class="form-label">
                            Selecione o arquivo (.xlsx ou .csv)
                        </label>
                        <input class="form-control"
                               type="file"
                               id="arquivo"
                               name="arquivo"
                               accept=".xlsx,.csv"
                               required />
                        <small class="form-text text-muted d-block mt-1">
                            Arraste e solte ou clique para selecionar.
                        </small>
                    </div>
                    <div id="mensagemModal"
                         class="alert alert-danger"
                         role="alert"
                         style="display:none;">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-outline-secondary"
                            data-bs-dismiss="modal">
                        Cancelar
                    </button>
                    <button type="submit"
                            class="btn btn-primary">
                        <i class="bi bi-upload"></i> Importar
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ENjdO4Dr2bkBIFxQpeoSOYfzF5YDFi6q9s9W4DD1zAsJRw4OV+NR7BfT0KF8dKGF"
            crossorigin="anonymous"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("formImport");
            const mensagemGeral = document.getElementById("mensagemGeral");
            const mensagemModal = document.getElementById("mensagemModal");
            const modalImport = document.getElementById("modalImportar");
            const modalImportBs = new bootstrap.Modal(modalImport);

            form.addEventListener("submit", function (e) {
                e.preventDefault();
                mensagemModal.style.display = "none";
                mensagemGeral.style.display = "none";

                const arquivoInput = document.getElementById("arquivo");
                if (!arquivoInput.files.length) {
                    mensagemModal.textContent = "Selecione um arquivo antes de enviar.";
                    mensagemModal.style.display = "block";
                    return;
                }

                const formData = new FormData(form);
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                fetch('@Url.Action("UploadAjax", "Importador")', {
                    method: 'POST',
                    headers: {
                        "RequestVerificationToken": token
                    },
                    body: formData
                })
                .then(response => {
                    if (!response.ok) {
                        return response.text().then(text => {
                            throw new Error(text || "Erro desconhecido ao chamar o servidor.");
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        modalImportBs.hide();

                        mensagemGeral.className = "alert alert-success mt-3";
                        mensagemGeral.textContent = data.message;
                        mensagemGeral.style.display = "block";

                        setTimeout(() => {
                            mensagemGeral.style.display = "none";
                        }, 5000);

                        atualizarTabela();
                    } else {
                        mensagemModal.textContent = data.message;
                        mensagemModal.className = "alert alert-danger";
                        mensagemModal.style.display = "block";
                    }
                })
                .catch(err => {
                    let msg = err.message;
                    if (msg.startsWith("<")) {
                        msg = "Ocorreu um erro no servidor.";
                    }
                    mensagemModal.textContent = msg;
                    mensagemModal.className = "alert alert-danger";
                    mensagemModal.style.display = "block";
                });
            });

            function atualizarTabela() {
                const urlParcial = '@Url.Action("GetTabelaContratos", "Importador")';

                console.log("Chamando fetch para:", urlParcial);

                fetch(urlParcial, {
                    method: 'GET'
                })
                .then(resp => {
                    if (!resp.ok) {
                        throw new Error("Falha ao buscar /Importador/GetTabelaContratos");
                    }
                    return resp.text();
                })
                .then(html => {
                    const tbodyAtual = document.getElementById('tbodyContratos');
                    if (tbodyAtual) {
                        tbodyAtual.innerHTML = html.trim();
                        console.log("Tabela atualizada com sucesso.");
                    } else {
                        console.warn("Não encontrou #tbodyContratos na página atual.");
                    }
                })
                .catch(err => {
                    console.error("Erro ao atualizar tabela:", err);
                });
            }
        });
    </script>
}